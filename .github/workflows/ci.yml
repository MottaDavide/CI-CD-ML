name: Continuous Integration

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]
  workflow_dispatch:

permissions: write-all
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: iterative/setup-cml@v2
      - name: Install Packages
        run: make install

      - name: Run unit tests
        env:
          DAGSHUB_USERNAME: ${{ secrets.DAGSHUB_USERNAME }}
          DAGSHUB_TOKEN: ${{ secrets.DAGSHUB_TOKEN }}
          DAGSHUB_REPO: ${{ secrets.DAGSHUB_REPO }}
          MLFLOW_EXPERIMENT_NAME: Drug_Classification
          REGISTERED_MODEL_NAME: DrugPipeline
        run: make test 

      - name: All tests passed ðŸŽ‰
        if: ${{ success() }}
        run: echo "âœ… Tutti i test sono passati con successo!"
        
 
      - name: Train (log to DagsHub MLflow)
        env:
          DAGSHUB_USERNAME: ${{ secrets.DAGSHUB_USERNAME }}
          DAGSHUB_TOKEN: ${{ secrets.DAGSHUB_TOKEN }}
          DAGSHUB_REPO: ${{ secrets.DAGSHUB_REPO }}
          MLFLOW_EXPERIMENT_NAME: Drug_Classification
          REGISTERED_MODEL_NAME: DrugPipeline
        run: make train

      - name: Evaluation
        env:
          REPO_TOKEN: ${{ secrets.TOKEN_GIT }}
        run: make eval

      - name: Promote best model (Stagingâ†’Production)
        env:
          DAGSHUB_USERNAME: ${{ secrets.DAGSHUB_USERNAME }}
          DAGSHUB_TOKEN: ${{ secrets.DAGSHUB_TOKEN }}
          DAGSHUB_REPO: ${{ secrets.DAGSHUB_REPO }}
          REGISTERED_MODEL_NAME: DrugPipeline
        run: conda run -n drug_cicd python promote_model.py

      - name: Clean
        run: make clean
      - name: Update Branch
        env:
          NAME: ${{ secrets.USER_NAME }}
          EMAIL: ${{ secrets.USER_EMAIL }}
        run: make update-branch USER_NAME=$NAME USER_EMAIL=$EMAIL
